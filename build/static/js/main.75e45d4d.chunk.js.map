{"version":3,"sources":["functions/Folder.tsx","Function.ts","customHooks/useLoad.tsx","Modal.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createFolder","body","a","axios","post","process","getFolders","get","deleteFolder","folderId","delete","GlobalExpand","Set","Active","deepCopySet","set","Array","from","connectedChildren","startNode","obj","treeValues","preOrderHelper","id","node","find","el","push","children","length","forEach","child","expand","add","console","log","matchObj","globalArray","activeArray","close","deleteNode","useLoad","useState","data","setData","loading","setLoading","dataLoad","setDataLoad","rootIndex","findIndex","activeIndex","globalIndex","state","setState","isActive","includes","handleAddFolder","name","parent","res","ID","prev","handleDeleteFolder","filter","glob","actv","React","useEffect","then","catch","err","message","findObjByID","isGlobal","isRoot","handleClick","isOn","showNode","Modal","handleModalFolder","handleModalDelete","closeModal","filename","deleteModal","modal","setModal","handleCancel","className","style","display","marginBottom","fontSize","onClick","e","onSubmit","preventDefault","target","value","trim","type","placeholder","Home","modalComponent","setModalComponent","contentView","dataModal","disabled","margin","backgroundColor","borderRadius","padding","cursor","color","content","returnMenuItem","map","returnData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e45d4d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { objResType } from \"../Types/index\";\r\ntype createType = {\r\n  id: string\r\n}\r\nexport const createFolder = async (body: { name: string, parent: string }) =>\r\n  await axios.post<createType>(`${process.env.REACT_APP_API}/create-folder`, body);\r\n\r\nexport const getFolders = async () =>\r\n  await axios.get<objResType>(`${process.env.REACT_APP_API}/folders`);\r\n\r\nexport const deleteFolder = async (folderId: string) =>\r\n  await axios.delete(`${process.env.REACT_APP_API}/folder/${folderId}`);\r\n","import { objType } from './Types'\r\n\r\nlet GlobalExpand: Set<string> = new Set()\r\nlet Active: Set<string> = new Set()\r\n\r\nconst deepCopySet = (set: Set<string>): string[] => {\r\n  return [...Array.from(set)]\r\n}\r\n\r\nfunction connectedChildren (startNode: string, obj: objType) {\r\n  const treeValues: string[] = []\r\n\r\n  const preOrderHelper = (id: string) => {\r\n    const node = obj.find(el => el.id === id)\r\n\r\n    if (node) {\r\n      treeValues.push(node.id)\r\n    }\r\n    //recursively call function on all node children\r\n    if (node && node.children.length !== 0) {\r\n      node?.children?.forEach((child: any) => {\r\n        preOrderHelper(child)\r\n      })\r\n    }\r\n    return true\r\n  }\r\n  preOrderHelper(startNode)\r\n  return treeValues\r\n}\r\n\r\nfunction expand (\r\n  id: string,\r\n  obj: objType\r\n): {\r\n  globalArray: string[]\r\n  activeArray: string[]\r\n} {\r\n  GlobalExpand.add(id)\r\n  Active.add(id)\r\n  console.log('Active:', deepCopySet(Active))\r\n  const matchObj = obj.find(el => el.id === id)\r\n\r\n  if (matchObj) {\r\n    const { children } = matchObj\r\n\r\n    if (children && children?.length > 0) {\r\n      if (typeof children !== 'string') {\r\n        children?.forEach(child => {\r\n          GlobalExpand.add(child)\r\n          Active.delete(child)\r\n        })\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  return {\r\n    globalArray: deepCopySet(GlobalExpand),\r\n    activeArray: deepCopySet(Active)\r\n  }\r\n}\r\n\r\nfunction close (\r\n  id: string,\r\n  obj: objType,\r\n  deleteNode = false\r\n): {\r\n  globalArray: string[]\r\n  activeArray: string[]\r\n} {\r\n  Active.delete(id)\r\n  connectedChildren(id, obj).forEach(child => {\r\n    Active.delete(child)\r\n    GlobalExpand.delete(child)\r\n  })\r\n\r\n  if (!deleteNode) GlobalExpand.add(id)\r\n  else GlobalExpand.delete(id)\r\n\r\n  return {\r\n    globalArray: deepCopySet(GlobalExpand),\r\n    activeArray: deepCopySet(Active)\r\n  }\r\n}\r\n\r\nexport { close, expand }\r\n","import React, { useState } from \"react\";\r\nimport { createFolder, deleteFolder, getFolders } from \"../functions/Folder\";\r\nimport { close, expand } from \"../Function\";\r\nimport { objType, singleObjType } from \"../Types\";\r\n\r\nconst useLoad = () => {\r\n  const [data, setData] = useState<(null | objType)>(null);\r\n  console.log(\"useLoad data:\", data);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataLoad, setDataLoad] = useState(true);\r\n  const findObjByID = (id: string): (singleObjType | undefined) =>\r\n    data?.find((data) => data.id === id)\r\n\r\n  const rootIndex = data?.findIndex(\r\n    (data) => data.id === \"60a7bc1682f47e3a3c73bd8c\"\r\n  );\r\n  type stateTypes = {\r\n    activeIndex: any[]\r\n    globalIndex: string[]\r\n  }\r\n  const [state, setState] = useState<stateTypes>({\r\n    activeIndex: [],\r\n    globalIndex: [\"60a7bc1682f47e3a3c73bd8c\"],\r\n  });\r\n\r\n  const { activeIndex, globalIndex } = state;\r\n\r\n\r\n  const isActive = (id: string): boolean => activeIndex.includes(id)\r\n\r\n  const isGlobal = (id: string): boolean => {\r\n\r\n    return globalIndex.includes(id);\r\n  };\r\n\r\n  const showNode = (id: string): boolean => globalIndex.includes(id);\r\n\r\n\r\n\r\n  const isRoot = (id: string): boolean => id === \"60a7bc1682f47e3a3c73bd8c\";\r\n\r\n\r\n\r\n  const handleAddFolder = async (id: string, name: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await createFolder({\r\n        name,\r\n        parent: id,\r\n      });\r\n\r\n      setLoading(false);\r\n      if (data) {\r\n\r\n        const { activeArray } = expand(id, data);\r\n\r\n\r\n        const ID = res.data.id\r\n        if (typeof ID === 'string') {\r\n          console.log(ID)\r\n\r\n          setState((prev) => ({\r\n            ...prev,\r\n            activeIndex: [...activeArray],\r\n            globalIndex: [...globalIndex, ID],\r\n          }));\r\n          setDataLoad(!dataLoad);\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleDeleteFolder = async (id: string) => {\r\n    setLoading(true);\r\n    try {\r\n      await deleteFolder(id);\r\n      setLoading(false);\r\n      if (data) {\r\n\r\n        const { globalArray, activeArray } = close(id, data, true);\r\n        setState((prev) => ({\r\n          ...prev,\r\n          globalIndex: globalArray.filter((glob) => glob !== id),\r\n          activeIndex: activeArray.filter((actv) => actv !== id),\r\n        }));\r\n        setDataLoad(!dataLoad);\r\n      }\r\n    } catch (error) {\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const loadData = () => {\r\n    setLoading(true);\r\n    getFolders()\r\n      .then((res) => {\r\n        console.log(\"res data:\", res.data);\r\n        setData([...res.data.data]);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(\"err:\", err.message);\r\n      });\r\n  };\r\n\r\n  const handleClick = (id: string) => {\r\n    console.log(\"clicked\", id);\r\n    const isOn = isActive(id);\r\n\r\n    if (data) {\r\n\r\n      if (isOn) {\r\n        const { globalArray, activeArray } = close(id, data);\r\n        setState((prev) => ({\r\n          ...prev,\r\n          globalIndex: globalArray,\r\n          activeIndex: activeArray,\r\n        }));\r\n      } else {\r\n        const { globalArray, activeArray } = expand(id, data);\r\n        setState((prev) => ({\r\n          ...prev,\r\n          globalIndex: globalArray,\r\n          activeIndex: activeArray,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadData();\r\n  }, [dataLoad]);\r\n\r\n  return {\r\n    findObjByID,\r\n    loading,\r\n    data,\r\n    handleAddFolder,\r\n    handleDeleteFolder,\r\n    isActive,\r\n    isGlobal,\r\n    isRoot,\r\n    handleClick,\r\n    rootIndex,\r\n    showNode,\r\n  };\r\n};\r\n\r\nexport default useLoad;\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport { ModalProps } from \"./Types\";\r\n\r\n\r\nconst Modal = ({\r\n  id,\r\n  handleModalFolder,\r\n  handleModalDelete,\r\n  closeModal,\r\n  filename,\r\n  deleteModal,\r\n}: ModalProps) => {\r\n  const [modal, setModal] = React.useState(true);\r\n  const handleSubmit = (e: any) => {\r\n    console.log(\"handleSubmit:\");\r\n    e.preventDefault();\r\n\r\n    const name = e.target.name.value.trim();\r\n    // console.log(name);\r\n    setModal(false);\r\n    if (name.trim() !== \"\") handleModalFolder(id, name);\r\n    else closeModal();\r\n  };\r\n  const handleDelete = () => {\r\n    handleModalDelete(id);\r\n  };\r\n  const handleCancel = () => {\r\n    closeModal();\r\n  };\r\n  if (!modal) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal-bg ${modal ? \"actv\" : \"modal-close\"} `}>\r\n        <div className=\"modal\">\r\n          {deleteModal ? (\r\n            <>\r\n              <span style={{ display: \"inline-block\", marginBottom: 2, fontSize: 40 }}>\r\n                {\" \"}\r\n                Delete {`${filename}`} ?\r\n              </span>\r\n              <button onClick={() => handleCancel()}>cancel</button>\r\n              <button id=\"delete\" onClick={(e) => handleDelete()}>delete</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span style={{ display: \"block\", marginBottom: 2, fontSize: 40 }}>\r\n                {\" \"}\r\n                Add folder in {`${filename}`} ?\r\n              </span>\r\n              <form onSubmit={handleSubmit} style={{ display: \"inline-block\" }}>\r\n\r\n                <input type=\"text\" id=\"fname\" name=\"name\" placeholder=\"folder name\" style={{ display: \"inline-block\", marginBottom: 2 }} />\r\n                <br />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                <button id=\"cancel\" onClick={handleCancel}>cancel</button>\r\n              </form>\r\n            </>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport useLoad from \"./customHooks/useLoad\";\r\nimport Modal from \"./Modal\";\r\nimport { singleObjType } from \"./Types\";\r\nimport \"./view.css\";\r\n\r\nconst Home = () => {\r\n  const [modalComponent, setModalComponent] = React.useState<any | null>(null);\r\n  const {\r\n    data,\r\n    loading,\r\n    handleAddFolder,\r\n    findObjByID,\r\n    handleDeleteFolder,\r\n    isActive,\r\n    isGlobal,\r\n    handleClick,\r\n\r\n    isRoot,\r\n  } = useLoad();\r\n\r\n\r\n  const contentView = (data: singleObjType) => (\r\n    <>\r\n\r\n      {!isRoot(data.id) && (\r\n        <button\r\n          onClick={() => {\r\n            console.log(\"delete folder clicked\");\r\n            const dataModal = findObjByID(data.id)\r\n            if (dataModal) {\r\n\r\n              setModalComponent(\r\n                <Modal\r\n                  id={data.id}\r\n                  filename={dataModal.name}\r\n                  handleModalFolder={handleModalFolder}\r\n                  closeModal={closeModal}\r\n                  deleteModal={true}\r\n                  handleModalDelete={handleModalDelete}\r\n                />\r\n              );\r\n            }\r\n          }}\r\n          disabled={isRoot(data.id)}\r\n          style={{\r\n            margin: 10,\r\n            backgroundColor: \"#FF2D1D\",\r\n            borderRadius: 5,\r\n            padding: 2,\r\n\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              cursor: \"pointer\",\r\n              color: \"#222\",\r\n              content: \"\\\\002B\",\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n\r\n            &#8855;\r\n\r\n          </span>\r\n        </button>\r\n      )}\r\n      <button\r\n        onClick={() => {\r\n          console.log(\"ad folder clicked\");\r\n          const dataModal = findObjByID(data.id)\r\n          if (dataModal) {\r\n\r\n            setModalComponent(\r\n              <Modal\r\n                id={data.id}\r\n                filename={dataModal.name}\r\n                handleModalFolder={handleModalFolder}\r\n                closeModal={closeModal}\r\n                deleteModal={false}\r\n                handleModalDelete={handleModalDelete}\r\n              />\r\n            );\r\n          }\r\n\r\n\r\n        }}\r\n        style={{\r\n          margin: 10,\r\n          backgroundColor: \"#9FAF0A\",\r\n          borderRadius: 20,\r\n          padding: 5,\r\n          content: \"\\\\002B\",\r\n        }}\r\n\r\n      >\r\n        <span\r\n          style={{\r\n            cursor: \"pointer\",\r\n            color: \"#222\",\r\n            content: \"\\\\002B\",\r\n            fontSize: 20,\r\n          }}\r\n        >\r\n          + New\r\n        </span>\r\n      </button>\r\n    </>\r\n  );\r\n\r\n\r\n  const returnMenuItem = (data: singleObjType) => {\r\n    if (typeof data.children !== 'string' && data.children.length > 0) {\r\n      const children = data.children.map((data) => {\r\n        const returnData = findObjByID(data)\r\n        if (typeof returnData !== 'undefined') {\r\n          return returnMenuItem(returnData)\r\n        }\r\n        else {\r\n          return null\r\n        }\r\n      }\r\n      );\r\n\r\n\r\n      return (\r\n        <li key={data.id}>\r\n          {isGlobal(data.id) && (\r\n            <>\r\n              <div\r\n                // className={`folder ${ok ? \"active\" : \"\"}`}\r\n                key={data.id}\r\n                className={`folder ${isActive(data.id) ? \"active\" : \"\"}`}\r\n              >\r\n                <span\r\n                  onClick={() => {\r\n                    console.log(\"handleClick clicked:\");\r\n                    handleClick(data.id);\r\n                  }}\r\n                  style={{ cursor: 'pointer' }}\r\n\r\n\r\n                >\r\n                  {isGlobal(data.id) ? data.name : \"\"}\r\n                </span>\r\n                {contentView(data)}\r\n              </div>\r\n              <ul\r\n                className={`folder-target ${isActive(data.id) ? \"active\" : \"\"}`}\r\n              >\r\n                {children}\r\n              </ul>\r\n            </>\r\n          )}\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <li\r\n            key={data.id}\r\n            className={`folder ${isActive(data.id) ? \"active\" : \"\"}`}\r\n\r\n          >\r\n            <span\r\n              onClick={() => {\r\n                console.log(\"handleClick clicked:\");\r\n                handleClick(data.id);\r\n              }}\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              {data.name}\r\n            </span>\r\n            {contentView(data)}\r\n          </li>\r\n\r\n          {isActive(data.id) && (\r\n            <ul className={`folder-target active `}>\r\n              {\"-no folder\"}\r\n            </ul>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalComponent(null);\r\n  };\r\n  const handleModalFolder = (id: string, name: string): void => {\r\n    handleAddFolder(id, name);\r\n    closeModal();\r\n  };\r\n  const handleModalDelete = (id: string): void => {\r\n    handleDeleteFolder(id);\r\n    closeModal();\r\n  };\r\n  if (loading) return <h1>Loading....</h1>;\r\n  console.log(data);\r\n  if (data) {\r\n    return (\r\n\r\n      <div className=\"base\" >\r\n        <ul className=\"folders\" key={data[0].id}>\r\n          {returnMenuItem(data[0])}\r\n        </ul>\r\n        {modalComponent}\r\n      </div >\r\n    )\r\n  }\r\n  else {\r\n    return null\r\n  }\r\n\r\n};\r\n\r\nexport default Home;\r\n","import * as React from \"react\";\nimport \"./App.css\";\n\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Folder Structure Viewer Created By @Ridwanur Rahman</h1>\n      </div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}